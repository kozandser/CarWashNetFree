<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:mahapps="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:klibnative="clr-namespace:KLib.Native;assembly=KLib.Native"
                    xmlns:model="clr-namespace:CarWashNet.Domain.Model"
                    xmlns:local="clr-namespace:CarWashNet.Presentation">
    <ResourceDictionary.MergedDictionaries>      
        <ResourceDictionary Source="pack://application:,,,/KLib.MahApps;component/Styles.Buttons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/KLib.MahApps;component/Styles.Buttons.Mahapps.xaml" />
        <ResourceDictionary Source="pack://application:,,,/KLib.MahApps;component/Styles.Menus.Mahapps.xaml" />
        <ResourceDictionary Source="pack://application:,,,/KLib.MahApps;component/Styles.DataGrids.Mahapps.xaml" />
        <ResourceDictionary Source="pack://application:,,,/KLib.MahApps;component/Styles.ComboBox.Mahapps.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <!--PAGE-->    
    <Style x:Key="AppPageHeaderStyle" TargetType="DockPanel">
        <Setter Property="Background" Value="{DynamicResource PeterRiverColorBrush}"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="DockPanel.Dock" Value="Top"/>
    </Style>
    <Style x:Key="AppPageBackButtonStyle" TargetType="Button" BasedOn="{StaticResource FlatButtonStyle}" x:Shared="false">
        <Setter Property="DockPanel.Dock" Value="Left"/>
        <Setter Property="Content" Value="{iconPacks:Material Kind=ArrowLeft}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="40" />
        <Setter Property="Visibility" Value="{Binding MainFrame.CanGoBack, Converter={klibnative:BoolToVisibilityConverter}}"/>        
    </Style>
    <Style x:Key="AppPageTitleStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Light"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Text" Value="{Binding MainFrame.Content.Title}"/>
    </Style>
    <Style x:Key="AppPageBackStackStyle" TargetType="ItemsControl">
        <Setter Property="ItemsSource" Value="{Binding MainFrame.BackStack}"/>
        <Setter Property="DockPanel.Dock" Value="Left"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="1" VerticalAlignment="Center"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel Background="#22FFFFFF" VerticalAlignment="Center" Margin="2 0 0 0">
                        <iconPacks:PackIconMaterial Kind="ChevronLeft" Foreground="White" FontSize="10" VerticalAlignment="Center" Margin="4 0 4 0" DockPanel.Dock="Left"/>
                        <TextBlock Text="{Binding Name}"
                                   TextTrimming="CharacterEllipsis"
                                   FontFamily="Segoe UI Light"
                                   FontSize="12"
                                   VerticalAlignment="Center"
                                   Foreground="White"
                                   Margin="2 4 4 4"
                                   ToolTip="{Binding Name}"/>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AppInfoDropDownButtonStyle" TargetType="mahapps:DropDownButton"  x:Shared="false">
        <Style.Resources>
            <Style x:Key="ButtonDropDownStyle" TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{DynamicResource BlackColorBrush}" />
                <Setter Property="Background" Value="{DynamicResource WhiteColorBrush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter x:Name="PART_ContentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#11000000" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#55000000" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource GrayBrush10}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ArrowVisibility" Value="Collapsed"/>
        <Setter Property="Icon" Value="{iconPacks:Material Kind=Information}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinWidth" Value="40"/>
    </Style>
    <!--MENU-->    
    <Style x:Key="LoadItemsMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}" x:Shared="False">
        <Setter Property="Icon" Value="{iconPacks:Material Kind=Reload, Width=12, Height=12}"/>
        <Setter Property="Command" Value="{Binding LoadItems}"/>
        <Setter Property="Header" Value="Обновить"/>
    </Style>
    <Style x:Key="AddMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}" x:Shared="False">
        <Setter Property="Icon" Value="{iconPacks:Material Kind=Plus, Width=12, Height=12}"/>
        <Setter Property="Command" Value="{Binding Add}"/>
        <Setter Property="Header" Value="Добавить"/>
    </Style>
    <Style x:Key="EditMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}"  x:Shared="False">
        <Setter Property="Icon" Value="{iconPacks:Material Kind=Pencil, Width=12, Height=12}"/>
        <Setter Property="Command" Value="{Binding Edit}"/>
        <Setter Property="Header" Value="Редактировать"/>
    </Style>
    <Style x:Key="DeleteMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}"  x:Shared="False">
        <Setter Property="Icon" Value="{iconPacks:Material Kind=Close, Width=12, Height=12}"/>
        <Setter Property="Command" Value="{Binding Delete}"/>
        <Setter Property="Header" Value="Удалить"/>
    </Style>
    <Style x:Key="LockMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}"  x:Shared="False">
        <Setter Property="Icon" Value="{iconPacks:Material Kind=Lock, Width=12, Height=12}"/>
        <Setter Property="Command" Value="{Binding Lock}"/>
        <Setter Property="Header" Value="Заблокировать"/>
    </Style>
    <Style x:Key="UnlockMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}"  x:Shared="False">
        <Setter Property="Icon" Value="{iconPacks:Material Kind=LockOpenOutline, Width=12, Height=12}"/>
        <Setter Property="Command" Value="{Binding Unlock}"/>
        <Setter Property="Header" Value="Разблокировать"/>
    </Style>
    <Style x:Key="CopyMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}"  x:Shared="False">
        <Setter Property="Icon" Value="{iconPacks:Material Kind=ContentCopy, Width=12, Height=12}"/>
        <Setter Property="Command" Value="{Binding Copy}"/>
        <Setter Property="Header" Value="Копировать"/>
    </Style>
    <Style x:Key="SelectMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}"  x:Shared="False">
        <Setter Property="Icon" Value="{iconPacks:Material Kind=Check, Width=16, Height=16}"/>
        <Setter Property="Command" Value="{Binding Select}"/>
        <Setter Property="Header" Value="Выбрать"/>
    </Style>
    <Style x:Key="SelectAllMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}"  x:Shared="False">
        <Setter Property="Icon" Value="{iconPacks:Material Kind=CheckboxMultipleMarkedOutline, Width=12, Height=12}"/>
        <Setter Property="Command" Value="{Binding SelectAll}"/>
        <Setter Property="Header" Value="Выбрать все"/>
    </Style>
    <Style x:Key="UnselectAllMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}"  x:Shared="False">
        <Setter Property="Icon" Value="{iconPacks:Material Kind=CheckboxMultipleBlankOutline, Width=12, Height=12}"/>
        <Setter Property="Command" Value="{Binding UnselectAll}"/>
        <Setter Property="Header" Value="Снять выбор со всех"/>
    </Style>
    <Style x:Key="InfoMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}"  x:Shared="False">
        <Setter Property="Icon" Value="{iconPacks:Material Kind=Information, Width=16, Height=16}"/>
        <Setter Property="Command" Value="{Binding ShowInfo}"/>
        <Setter Property="Header" Value="Информация"/>
    </Style>
    <Style x:Key="ReadyMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}" x:Shared="False">
        <Setter Property="Icon" Value="{iconPacks:Material Kind=Check, Width=12, Height=12}"/>
        <Setter Property="Command" Value="{Binding SetReady}"/>
    </Style>
    <Style x:Key="UnreadyMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}" x:Shared="False">
        <Setter Property="Command" Value="{Binding SetUnready}"/>
    </Style>
    <Style x:Key="PrintMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MenuItem}" x:Shared="False">
        <Setter Property="Icon" Value="{iconPacks:Material Kind=Printer, Width=12, Height=12}"/>
        <Setter Property="Command" Value="{Binding Print}"/>
        <Setter Property="Header" Value="Печать"/>
    </Style>
    
    
    
    
    <!--DATAGRID-->     
    <Style TargetType="{x:Type DataGridRow}" x:Key="DataGridRowStyle" BasedOn="{StaticResource DefaultDataGridRowStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Grid>
                        <Border x:Name="OverlayBorder" Opacity="0.08">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,0" StartPoint="10,10"
                                                     MappingMode="Absolute" SpreadMethod="Repeat">
                                    <GradientStop Color="{Binding EntityState, Converter={local:EntityStateToColorConverter}}" Offset="0" />
                                    <GradientStop Color="{Binding EntityState, Converter={local:EntityStateToColorConverter}}" Offset="0.4" />
                                    <GradientStop Color="Transparent" Offset="0.4" />
                                    <GradientStop Color="Transparent" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="DGR_Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1"
                                                        ItemsPanel="{TemplateBinding ItemsPanel}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter  SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                                           Grid.Column="1" Grid.Row="1"
                                                           Visibility="{TemplateBinding DetailsVisibility}" />
                                <DataGridRowHeader SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                   Grid.RowSpan="2"
                                                   Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>
                            </SelectiveScrollingGrid>
                        </Border>
                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DataGridRowBackgroundHover}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource DataGridRowBackgroundSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>                    
    </Style>    
    <Style x:Key="DataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource DefaultDataGridStyle}">
        <Setter Property="HeadersVisibility" Value="All"/>
        <Setter Property="klibnative:DataGridBehavior.DisplayRowNumber" Value="True"/>
        <Setter Property="klibnative:DataGridBehavior.SyncSortWithView" Value="True"/>
        <Setter Property="klibnative:DataGridBehavior.ScrollToSelectedItem" Value="True"/>
        <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}"/>
        <Setter Property="MinRowHeight" Value="40"/>
    </Style>
    
    <!--BUTTON-->    
    <Style x:Key="LoadItemsToolBarButton" TargetType="Button" BasedOn="{StaticResource ToolBarButtonStyle}" x:Shared="False">
        <Setter Property="Content" Value="{iconPacks:Material Kind=Reload}"/>
        <Setter Property="Command" Value="{Binding LoadItems}"/>
    </Style>
    <Style x:Key="AddToolBarButton" TargetType="Button" BasedOn="{StaticResource ToolBarButtonStyle}" x:Shared="False">
        <Setter Property="Content" Value="{iconPacks:Material Kind=Plus}"/>
        <Setter Property="Command" Value="{Binding Add}"/>
    </Style>
    <Style x:Key="EditToolBarButton" TargetType="Button" BasedOn="{StaticResource ToolBarButtonStyle}" x:Shared="False">
        <Setter Property="Content" Value="{iconPacks:Material Kind=Pencil}"/>
        <Setter Property="Command" Value="{Binding Edit}"/>
    </Style>
    <Style x:Key="SelectToolBarButton" TargetType="Button" BasedOn="{StaticResource ToolBarButtonStyle}" x:Shared="False">
        <Setter Property="Content" Value="{iconPacks:Material Kind=Check}"/>
        <Setter Property="Command" Value="{Binding Select}"/>
    </Style>
    <Style x:Key="PrintToolBarButton" TargetType="Button" BasedOn="{StaticResource ToolBarButtonStyle}" x:Shared="False">
        <Setter Property="Content" Value="{iconPacks:Material Kind=Printer}"/>
        <Setter Property="Command" Value="{Binding Print}"/>
    </Style>
    
    <Style x:Key="OrderReadyButton" TargetType="Button" x:Shared="False">
        <Setter Property="Content" Value="{iconPacks:Material Kind=Check, Width=12, Height=12}"/>
        <Setter Property="ToolTip" Value="Открыть заезд"/>
        <Setter Property="Command" Value="{Binding DataContext.SwitchReadiness, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
        <Setter Property="Margin" Value="1"/>                        
        <Setter Property="Background" Value="{DynamicResource EmerlandColorBrush}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="MinWidth" Value="15"/>
        <Setter Property="FontSize" Value="10"/>        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid MinWidth="8" MinHeight="20">
                        <Border x:Name="PART_Main" Background="{TemplateBinding Background}"/>
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                                          
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Main" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PART_Main" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Main" Property="Opacity" Value="0.1" />
                        </Trigger>                                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>                        
        <Style.Triggers>
            <DataTrigger Binding="{Binding CloseTime}" Value="{x:Null}">
                <Setter Property="Background" Value="{DynamicResource SunFlowerColorBrush}"/>
                <Setter Property="ToolTip" Value="Закрыть заезд"/>
            </DataTrigger>                                                    
        </Style.Triggers>
    </Style>
    <!--MISC-->
    <Style x:Key="InfoItemStyle" TargetType="Label">
        <Setter Property="Margin" Value="3 2 0 2"/>
        <Setter Property="Padding" Value="5 2 5 2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{DynamicResource SilverColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true" 
                            CornerRadius="3"
                            Cursor="Help">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="InfoItemCaptionStyle" TargetType="Label">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="CarInfoPopup" TargetType="Popup">
        <Setter Property="Placement" Value="Mouse"/>
        <Setter Property="StaysOpen" Value="False"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="IsOpen" Value="{Binding IsOpen}"/>
    </Style>
    <Style x:Key="CarInfoPopupContent" TargetType="{x:Type ContentControl}">
        <Setter Property="Content" Value="{Binding}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border BorderBrush="Black"
                            BorderThickness="1"
                            Background="White">
                        <StackPanel Margin="5">
                            <TextBlock>
                                <Run Text="{Binding Car.CarModel.Caption}" FontWeight="Bold"/> - <Run Text="{Binding Car.FedCode}" FontWeight="Bold"/> 
                            </TextBlock>                    
                            <Separator />
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Заездов" Width="105" FontWeight="Bold"/>
                                <TextBlock Text="{Binding OrdersCount}" Width="100" TextAlignment="Right"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="На сумму" Width="105" FontWeight="Bold"/>
                                <TextBlock Text="{Binding OrdersSum, StringFormat=c2}" Width="100" TextAlignment="Right"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Первый заезд" Width="105" FontWeight="Bold"/>
                                <TextBlock Text="{Binding FirstOrderDate, StringFormat=d, TargetNullValue=нет}" Width="100" TextAlignment="Right"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Последний заезд" Width="105" FontWeight="Bold"/>
                                <TextBlock Text="{Binding LastOrderDate, StringFormat=d, TargetNullValue=нет}" Width="100" TextAlignment="Right"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ClientInfoPopupContent" TargetType="{x:Type ContentControl}">
        <Setter Property="Content" Value="{Binding}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border BorderBrush="Black"
                            BorderThickness="1"
                            Background="White">
                        <StackPanel Margin="5">
                            <TextBlock>
                                <Run Text="{Binding Client.Caption}" FontWeight="Bold"/> - <Run Text="{Binding Client.Card}" FontWeight="Bold"/> 
                            </TextBlock>                    
                            <Separator />
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Заездов" Width="105" FontWeight="Bold"/>
                                <TextBlock Text="{Binding OrdersCount}" Width="100" TextAlignment="Right"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="На сумму" Width="105" FontWeight="Bold"/>
                                <TextBlock Text="{Binding OrdersSum, StringFormat=c2}" Width="100" TextAlignment="Right"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Первый заезд" Width="105" FontWeight="Bold"/>
                                <TextBlock Text="{Binding FirstOrderDate, StringFormat=d, TargetNullValue=нет}" Width="100" TextAlignment="Right"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Последний заезд" Width="105" FontWeight="Bold"/>
                                <TextBlock Text="{Binding LastOrderDate, StringFormat=d, TargetNullValue=нет}" Width="100" TextAlignment="Right"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--OVERRIDES-->
    <Style TargetType="DataGrid" BasedOn="{StaticResource DataGridStyle}"/>
    <Style TargetType="ComboBox" BasedOn="{StaticResource DefaultComboBoxStyle}"/>
    
</ResourceDictionary>